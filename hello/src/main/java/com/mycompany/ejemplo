private FlightStatusResponse buildFlightStatusResponse(){
    return buildFlightStatusResponse("448", "MAD", "2021-06-25");
}

private FlightStatusResponse buildScheduledFlightsByAirportResponse(){
    return buildFlightStatusResponse("448", "MAD", "2021-07-03");
}

private FlightStatusResponse buildScheduledFlightsByRouteResponse(){
    return buildFlightStatusResponse("448", "MAD", "2021-07-03");
}

private FlightStatusResponse buildFlightStatusResponse(String flightNumber, String departureAirportCode, String departureDate) {
    AirlineRequest airlineRequest = new AirlineRequest("IB", "IB");
    Flight flight = new Flight(flightNumber, flightNumber);
    Utc utc = new Utc(false);
    NonstopOnly nonstopOnly = new NonstopOnly(false);
    DataLakeDate date = new DataLakeDate(departureDate.substring(0, 4), departureDate.substring(5, 7), departureDate.substring(8), departureDate);
    ExtendedOptions extendedOptions = new ExtendedOptions("languageCode:es", "languageCode:es");
    String requestUrl = String.format("https://api.flightstats.com/flex/flightstatus/rest/v2/json/flight/status/IB/%s/dep/%s?extendedOptions=languageCode%%3Aes", flightNumber, departureDate);
    FlightStatusRequest request = new FlightStatusRequest(airlineRequest, flight, utc, requestUrl, nonstopOnly, date, extendedOptions, null, null, null, null, null);
    Appendix appendix = buildAppendix();
    FlightStatuses flightStatuses = new FlightStatuses("1063558240", "IB", flightNumber, departureAirportCode, "BIO", null,
            Mockito.mock(FsDate.class), Mockito.mock(FsDate.class), FsStatus.LANDED, Mockito.mock(Schedule.class),
            Mockito.mock(OperationalTimes.class), Arrays.asList(Mockito.mock(Codeshares.class)),
            Mockito.mock(Delays.class), Mockito.mock(FlightDurations.class), Mockito.mock(AirportResources.class),
            Mockito.mock(FlightEquipment.class), null);
    return new FlightStatusResponse(request, appendix, Arrays.asList(flightStatuses));
}

private Appendix buildAppendix() {
    Airline airline = Mockito.mock(Airline.class);
    Airport airport = Mockito.mock(Airport.class);
    Equipment equipment = Mockito.mock(Equipment.class);
    return new Appendix(Arrays.asList(airline), Arrays.asList(airport), Arrays.asList(equipment));
}

